{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","gif","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAgCeA,EA7BK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAavC,OACE,0BAAMC,SATiB,SAACC,GACxBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAY,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC5CN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAfoB,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,QAgBlDG,YAAY,aCXLC,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVjB,kBAadY,GAbc,4CAAH,sDCoBLM,EAhBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACX,GACtBS,EAAS,CACPV,KAAMC,EACNO,SAAS,SAGZ,CAACd,IAEGe,EDbyBI,CAAanB,GAA/BO,EADkB,EACxBD,KAAYQ,EADY,EACZA,QAEpB,OACE,oCACE,wBAAIlB,UAAU,qCAAqCI,GAClDc,GAAW,uBAAGlB,UAAU,uCAAb,cACZ,yBAAKA,UAAU,aACZW,EAAKC,KAAI,SAACC,GACT,OAAO,kBAAC,EAAD,eAAaW,IAAKX,EAAIC,IAAQD,UEUhCY,EAnBM,WAAO,IAAD,EACS1C,mBAAS,CACzC,cAFuB,mBAClBQ,EADkB,KACNT,EADM,KAKzB,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,YAAaA,IAC1B,6BACA,4BACGS,EAAWqB,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,UCV5CsB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.07647cd7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategory }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => setInputValue(e.target.value);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 3) {\n      setCategory((categories) => [inputValue, ...categories,]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <input\n        type='text'\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder='Search'\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategory: PropTypes.func.isRequired,\n}\n\nexport default AddCategory;\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=0q1F0YV7Y02nMk4vJ44CXtuWczxRMH4W`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((gif) => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from 'react';\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n  const { data: gifs, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n      {loading && <p className='animate__animated animate__bounceIn'>Loading...</p>}\n      <div className='card-grid'>\n        {gifs.map((gif) => {\n          return <GifGridItem key={gif.id} {...gif} />;\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((gifs) => {\n      setstate({\n        data: gifs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './AddCategory';\nimport GifGrid from './GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategory] = useState([\n    'Star Wars',\n  ]);\n\n  return (\n    <>\n      <h2>Gif Expert App</h2>\n      <AddCategory setCategory={setCategory} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}